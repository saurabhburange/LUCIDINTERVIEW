name: AI PR Review

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  ai_review:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y jq

      - name: Install Google Cloud SDK
        run: |
          echo "${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}" | base64 --decode > gcp-key.json
          gcloud auth activate-service-account --key-file=gcp-key.json
          gcloud config set project carbide-acre-451700-g8

      - name: Install GitHub CLI
        run: |
          sudo apt update
          sudo apt install gh

      - name: Get PR Diff and Commit Message
        run: |
          PR_NUMBER=${{ github.event.pull_request.number }}
          REPO=${{ github.repository }}
          GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}

          echo "Fetching PR diff for #$PR_NUMBER from $REPO"
          
          # Fetch PR diff (actual code changes)
          gh pr diff $PR_NUMBER > pr_diff.txt
          
          # Fetch commit message (if needed for AI review)
          gh pr view $PR_NUMBER --json commits -q '.commits[-1].message' > commit_message.txt

          echo "PR diff and commit message saved."
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Debug File Structure
        run: ls -R $GITHUB_WORKSPACE

      - name: Install Python dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run AI Review
        run: python $GITHUB_WORKSPACE/ai_pr_review.py pr_diff.txt commit_message.txt
      
      - name: Delete Existing AI Comment
        if: contains(steps.get-comments.outputs.data, 'AI Code Review Feedback')
        run: |
          COMMENT_ID=$(echo '${{ steps.get-comments.outputs.data }}' | jq -r '.[] | select(.body | contains("AI Code Review Feedback")) | .id')
          if [ "$COMMENT_ID" != "null" ]; then
            curl -X DELETE -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
                 "https://api.github.com/repos/${{ github.repository_owner }}/${{ github.event.repository.name }}/issues/comments/$COMMENT_ID"
          fi

      - name: Comment AI Review on PR
        run: |
          PR_NUMBER=${{ github.event.pull_request.number }}
          REPO=${{ github.repository }}

          echo "Posting AI review feedback on PR #$PR_NUMBER"
          AI_FEEDBACK=$(cat ai_feedback.txt)
          gh pr comment $PR_NUMBER --body "### ðŸ¤– AI Code Review Feedback ðŸš€\n\n$AI_FEEDBACK"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
